//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarketOtomasyonEnti.Data2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Model1Container1 : DbContext
    {
        public Model1Container1()
            : base("name=Model1Container1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Kategori> Kategori { get; set; }
        public virtual DbSet<Satıs> Satıs { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Urunler> Urunler { get; set; }
        public virtual DbSet<Stok> Stok { get; set; }
        public virtual DbSet<UrunMarka> UrunMarka { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_anaekran()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_anaekran");
        }
    
        public virtual int sp_anaekran2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_anaekran2");
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_satıs(Nullable<int> urunID, Nullable<int> adet)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            var adetParameter = adet.HasValue ?
                new ObjectParameter("Adet", adet) :
                new ObjectParameter("Adet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_satıs", urunIDParameter, adetParameter);
        }
    
        public virtual int sp_satis(Nullable<int> urunID, Nullable<int> adet)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            var adetParameter = adet.HasValue ?
                new ObjectParameter("Adet", adet) :
                new ObjectParameter("Adet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_satis", urunIDParameter, adetParameter);
        }
    
        public virtual int sp_StokGuncelle(Nullable<int> urunID, Nullable<int> adet)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            var adetParameter = adet.HasValue ?
                new ObjectParameter("Adet", adet) :
                new ObjectParameter("Adet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StokGuncelle", urunIDParameter, adetParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_anaekran3_Result> sp_anaekran3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_anaekran3_Result>("sp_anaekran3");
        }
    
        public virtual ObjectResult<sp_anaekran4_Result> sp_anaekran4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_anaekran4_Result>("sp_anaekran4");
        }
    
        public virtual int sp_sil(Nullable<int> urunID)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sil", urunIDParameter);
        }
    
        public virtual int sp_sil2(Nullable<int> urunID)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sil2", urunIDParameter);
        }
    
        public virtual int sp_guncelle(Nullable<int> urunID, string yeniAd)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            var yeniAdParameter = yeniAd != null ?
                new ObjectParameter("YeniAd", yeniAd) :
                new ObjectParameter("YeniAd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_guncelle", urunIDParameter, yeniAdParameter);
        }
    }
}
